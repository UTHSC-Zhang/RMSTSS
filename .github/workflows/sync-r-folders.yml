# Name for the GitHub Actions workflow
name: Sync R Folder from App to Package (Simple)

# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches:
      # Only run on pushes to the main branch
      - main
    paths:
      # Only run if files inside this directory have changed
      - 'RMSTSS-App/R/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  sync:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Check out the main RMSTSS repo which contains the source R folder.
      - name: Checkout Source Repo (RMSTSS)
        uses: actions/checkout@v4
        with:
          # This specifically checks out the RMSTSS repository.
          repository: UTHSC-Zhang/RMSTSS
          path: main_repo # Checkout into a directory named 'main_repo'

      # Step 2: Check out the destination RMSTSS-Package repo into a different directory.
      - name: Checkout Destination Repo (RMSTSS-Package)
        uses: actions/checkout@v4
        with:
          # This specifically checks out the RMSTSS-Package repository.
          repository: UTHSC-Zhang/RMSTSS-Package
          path: package_repo # Checkout into a directory named 'package_repo'
          # Use the PAT to allow pushing changes later.
          token: ${{ secrets.GH_PAT }}

      # Step 3: Copy the R folder, overwriting the destination.
      - name: Sync the R folder
        run: |
          # First, remove the old R folder from the destination to ensure a clean copy.
          rm -rf ./package_repo/R
          # Now, copy the R folder from the source to the destination.
          cp -r ./main_repo/RMSTSS-App/R ./package_repo/R
          echo "R folder successfully synced."

      # Step 4: Commit and push changes if any exist.
      - name: Commit and Push Changes
        run: |
          # Navigate into the destination repository's directory.
          cd package_repo
          
          # Configure git user for the commit.
          git config user.name "GitHub Actions Bot"
          git config user.email "actions-bot@github.com"
          
          # Add all changes to staging.
          git add -A
          
          # Commit the changes if there are any, otherwise do nothing.
          # The '|| true' part ensures the workflow doesn't fail if there's nothing to commit.
          git commit -m "Automated Sync: Replace R folder from RMSTSS-App" || true

          # Push the changes back to the RMSTSS-Package repository.
          git push
